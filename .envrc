#!/usr/bin/env bash

# Jira to OpenProject Migration - direnv configuration
# This file is automatically loaded when entering the project directory

# =======================================================================
# ENVIRONMENT LOADER
# =======================================================================

# Check if .env file exists
if [[ ! -f .env ]]; then
    echo "‚ö†Ô∏è  .env file missing!"
    echo "üìã Copy from .env.example and update with your credentials:"
    echo "   cp .env.example .env"
    echo "   nano .env  # Add your real credentials"
    echo ""
    echo "üîë Required credentials (update in .env):"
echo "   - J2O_JIRA_URL, J2O_JIRA_USERNAME, J2O_JIRA_API_TOKEN"
echo "   - J2O_OPENPROJECT_URL, J2O_OPENPROJECT_API_TOKEN"
echo ""
echo "üí° Only add variables to .env that you want to override from defaults!"
    echo ""
    direnv deny
    return 1
fi

# Load environment variables from .env
set -a  # automatically export all variables
source <(grep -v '^#' .env | grep -v '^$')
set +a  # stop automatically exporting

# =======================================================================
# PYTHON VIRTUAL ENVIRONMENT
# =======================================================================

# Activate local .venv if present (no side-effects if missing)
if [[ -f .venv/bin/activate ]]; then
    source .venv/bin/activate
fi

# =======================================================================
# STATUS DISPLAY
# =======================================================================

echo "üöÄ Jira to OpenProject Migration Environment"
echo "üìç $(pwd)"
echo "üìä Loaded $(grep -v '^#' .env | wc -l) environment variables"

# Show configuration status
if [[ "$J2O_JIRA_URL" == "https://your-company.atlassian.net" ]]; then
    echo "‚ö†Ô∏è  Jira: Using placeholder URL - update .env with real credentials"
else
    echo "‚úÖ Jira: Configured ($J2O_JIRA_URL)"
fi

if [[ "$J2O_OPENPROJECT_URL" == "https://your-openproject.company.com" ]]; then
    echo "‚ö†Ô∏è  OpenProject: Using placeholder URL - update .env with real credentials"
else
    echo "‚úÖ OpenProject: Configured ($J2O_OPENPROJECT_URL)"
fi

# Show test mode status
if [[ "$J2O_TEST_MODE" == "true" ]]; then
    echo "üß™ Test Mode: ENABLED (using mock services)"
else
    echo "üè≠ Production Mode: ENABLED (using real services)"
fi

# =======================================================================
# HELPER COMMANDS
# =======================================================================

echo "üí° Quick Commands:"
echo "   python -m config.cli show      # Show current configuration"
echo "   python -m config.cli validate  # Validate configuration"
echo "   j2o migrate --force --no-backup --stop-on-error --no-confirm"
echo ""
