# Task ID: 26
# Title: Refactor OpenProjectClient File Transfer Methods to Use SSHClient and DockerClient
# Status: done
# Dependencies: 25
# Priority: high
# Description: Update OpenProjectClient’s file transfer methods to leverage SSHClient for remote host transfers and DockerClient for container transfers, ensuring consistent and reliable file handling.
# Details:
1. Identify existing file transfer methods in OpenProjectClient (e.g., uploadFile, downloadFile).
2. Remove any direct file copy or transport logic and replace with calls to the initialized SSHClient and DockerClient instances from Task 25.
3. For remote host transfers, use SSHClient’s SFTP or SCP features; for container transfers, use DockerClient’s copy methods or tar streaming.
4. Ensure proper path resolution: convert local paths to remote host paths and container paths as needed.
5. Implement error handling and retries for transient network or I/O failures.
6. Add detailed logging for each step (start, success, failure) including file names, sizes, and transfer durations.
7. Update method signatures and documentation to reflect the new client-based approach.
8. Ensure cleanup of temporary files or streams after transfer.

# Test Strategy:
1. Unit Tests: Mock SSHClient and DockerClient to verify that file transfer methods invoke the correct client methods with expected parameters and handle errors properly.
2. Integration Tests: 
   a. Set up a test SSH server and Docker container; attempt to transfer a sample file via OpenProjectClient and verify file presence and integrity on both host and container.
   b. Test failure scenarios (e.g., non-existent file, permission denied) and confirm proper error propagation and retry behavior.
3. Logging Verification: Capture and assert log entries for each transfer step, ensuring messages include file details and statuses.
4. Performance Smoke Test: Transfer a large file to measure transfer duration and validate that retry logic doesn’t cause excessive delays.
