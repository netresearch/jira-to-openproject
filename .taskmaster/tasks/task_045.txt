# Task ID: 45
# Title: Implement Work Package Migration
# Status: done
# Dependencies: 33
# Priority: high
# Description: Develop and integrate the migration logic to transfer work package data from Jira into OpenProject, preserving hierarchy, metadata, and custom fields.
# Details:
1. Extend the existing migration framework to add a new module src/migrations/work_package_migration.py.
2. Use JiraClient.get_work_packages() to extract all work packages, including custom fields, attachments, and parent–child relationships.
3. Map Jira issue types and statuses to OpenProject work package types and states, reusing the mapping patterns from link_type_migration.
4. Transform and normalize fields, including dates, user references, priorities, and custom field values. For any unmapped custom fields, leverage CustomFieldMigration to create them in OpenProject.
5. Preserve hierarchical relationships: migrate parent tasks before children, then update child work packages in OpenProject to reference the correct parent ID.
6. Use the dependency injection pattern provided by the centralized DI container (per Task #33) to inject JiraClient, OpenProjectClient, and CustomFieldMigration instances.
7. Implement robust error handling, logging each failed record to a retry queue, and summarize migration statistics at the end of execution.
8. Add command-line interface support (e.g., --batch-size, --dry-run) consistent with other migration scripts.

# Test Strategy:
1. Unit tests: mock JiraClient to return a sample list of work packages with varied field values and verify that OpenProjectClient.create_work_package is called with correctly mapped payloads.
2. Edge cases: test unmapped custom fields trigger CustomFieldMigration.create_custom_field and correct association in the created work package.
3. Integration tests: run the full work_package_migration script against a staging database and OpenProject sandbox, then verify record counts, field values, and parent–child links.
4. Dry-run tests: confirm that with --dry-run flag no data is actually written to OpenProject but the expected API calls are logged.
5. Performance test: migrate a large dataset (~10,000 work packages) and ensure completion within acceptable time and resource limits.
