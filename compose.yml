# SECURITY CHECKLIST - Review before adding any Docker configuration:
# [ ] Is Docker socket mount really needed? (Usually NO - see security docs)
# [ ] Are services running as non-root users?
# [ ] Are secrets in .env file (not hardcoded in compose.yml)?
# [ ] Are unnecessary ports closed?
# [ ] Are resource limits defined?
# [ ] Are volumes properly scoped?
# [ ] Is .env file properly ignored by git?

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      # Mount source code for live editing
      - .:/app
      # SECURITY: Docker socket mount removed to prevent container escape
      # This migration tool uses SSH-based remote Docker client - no local Docker daemon access needed
      # See src/clients/docker_client.py for SSH-based Docker operations
    command: sleep infinity
    user: vscode
    environment:
      # Ensure Python can find user-installed packages
      - PYTHONPATH=/app
      # Load environment variables from .env file
      - ENV_FILE=/app/.env
    networks:
      - dev_network
    # SECURITY: App service exposed on localhost only via port mapping (127.0.0.1:port)
    # Container binding uses 0.0.0.0 for Docker networking, but host access is localhost-only
    # Primary web application port - accessible at localhost:8000
    ports:
      - "127.0.0.1:8000:8000"  # Primary web app port
      # REMOVED: Secondary port 5000 (unnecessary duplication)
    profiles:
      - dev

  # Mock Jira API server for testing
  # SECURITY: Mock service ports only exposed with --profile dev for development convenience
  # Default: No external port exposure (maximum security)
  # Dev mode: Accessible at localhost:4010 when using --profile dev
  mock-jira:
    image: stoplight/prism:4
    command: mock -h 0.0.0.0 -p 4010 /specs/jira-openapi.yml
    ports:
      - "127.0.0.1:4010:4010"
    volumes:
      - ./test-specs:/specs:ro
    networks:
      - dev_network
    profiles:
      - dev  # Changed from 'testing' to 'dev' for better integration

  # Mock OpenProject API server for testing
  # SECURITY: Mock service ports only exposed with --profile dev for development convenience
  # Default: No external port exposure (maximum security)
  # Dev mode: Accessible at localhost:4011 when using --profile dev
  mock-openproject:
    image: stoplight/prism:4
    command: mock -h 0.0.0.0 -p 4011 /specs/openproject-openapi.yml
    ports:
      - "127.0.0.1:4011:4011"
    volumes:
      - ./test-specs:/specs:ro
    networks:
      - dev_network
    profiles:
      - dev  # Changed from 'testing' to 'dev' for better integration

  # Redis for caching (optional)
  # SECURITY: Redis internal service - no external port exposure needed
  # Available to other services via hostname 'redis:6379' on Docker network
  redis:
    image: redis:7-alpine
    # REMOVED: External port mapping (was 127.0.0.1:6379:6379)
    # Service accessible internally via hostname 'redis' on port 6379
    networks:
      - dev_network
    profiles:
      - services
    volumes:
      - redis_data:/data

  # PostgreSQL for testing migration state tracking (optional)
  # SECURITY: PostgreSQL internal service - no external port exposure needed
  # Available to other services via hostname 'postgres:5432' on Docker network
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-migration_test}
      POSTGRES_USER: ${POSTGRES_USER:-testuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?POSTGRES_PASSWORD must be set in .env file}
    # REMOVED: External port mapping (was 127.0.0.1:5432:5432)
    # Service accessible internally via hostname 'postgres' on port 5432
    networks:
      - dev_network
    profiles:
      - services
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  dev_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
