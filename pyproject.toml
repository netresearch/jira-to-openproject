[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "j2o"
version = "0.1.0"
description = "Jira to OpenProject migration tool"
authors = [
    {name = "Sebastian Mendel", email = "sebastian.mendel@netresearch.de"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12,<4.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.scripts]
j2o = "src.main:main"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 120
target-version = ["py312", "py313"]
skip-string-normalization = false
exclude = '''
/(
    \.git
  | \.venv
  | \.mypy_cache
  | \.pytest_cache
  | \.tox
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = false
strict = true
enable_error_code = "deprecated"

# Limit type-checking to exactly these directories
files   = ["src", "scripts", "tests"]
exclude = ['^build/', '^dist/', '^\\.venv/']

[tool.isort]
profile = "black"
line_length = 120

[tool.ruff]
target-version = "py312"
fix = true

[tool.ruff.lint]
select = ["ALL"]

# Exclude specific rules in test files
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",   # Use of assert detected
    "ARG002", # Unused method argument
    "E501",   # Line too long
    "PLR0913", # Too many arguments in function definition
    "SLF001", # Private member accessed
    "S108",   # Probable insecure usage of temporary file or directory
    "B018",   # Found useless expression
    "ANN401", # Dynamically typed expressions (Any)
    "D401",   # First line of docstring should be in imperative mood
    "D200",    # One-line docstring should fit on one line
    "T201",    # Allow print in tests
    "T203",    # Allow pprint in tests
    "PLR2004", # Use of magic number
    "D103",
    "D100",
    "PT011"
]
"scripts/**/*.py" = ["T201", "T203"]  # Allow (p)print in scripts
"examples/**/*.py" = ["T201", "T203"]  # Allow (p)print in examples