[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

markers =
    unit: mark a test as a unit test (fast)
    functional: mark a test as a functional test (medium speed)
    integration: mark a test as an integration test (medium speed)
    end_to_end: mark a test as an end-to-end test (slow)
    slow: mark a test as slow-running
    fast: mark a test as fast-running (unit tests)
    requires_docker: test requires Docker to be available
    requires_ssh: test requires SSH connection to be available
    requires_rails: test requires Rails console to be available
    security: mark a test as a security test
    regression: mark a test as a regression test
    performance: mark a test as performance-related
    asyncio: mark a test as an asyncio test

# Show more detailed output for failed tests
addopts = -v --strict-markers
cache_dir = var/.pytest_cache

# Disable the Warnings summary
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Integration test harness defines helper classes with __init__, which triggers collection warnings
    ignore:cannot collect test class.*because it has a __init__ constructor:pytest.PytestCollectionWarning
